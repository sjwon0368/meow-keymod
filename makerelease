#!/bin/bash

# Check if a version argument is provided
if [ -z "$1" ]; then
    echo "Usage: ./makerelease <version>"
    echo "Expected a String type value for <version> but got none."
    exit 1
fi

VERSION=$1
RELEASE_DIR="./releases/v$VERSION"

# Create the release directory
echo "[i] Creating release directory..."
if [ -d "$RELEASE_DIR" ]; then
    # This is the release_dir function
    read -p "[?] Release directory already exists. (1) Overwrite or (2) Release as a different version? (1, 2) " choice
    if [ "$choice" -eq 1 ]; then
        rm -rf "$RELEASE_DIR"
    elif [ "$choice" -eq 2 ]; then
        echo "[>] Please provide a different version name:"
        read -p "New version: " new_version
        RELEASE_DIR="./releases/v$new_version"
    else
        echo "[!] Invalid choice. Exiting."
        exit 1
    fi
fi
mkdir -p "$RELEASE_DIR"

# Copy the specified files and folders
echo
echo "[.] Copying files to release directory...(src/* and manifest.json)"
cp -r ./src "$RELEASE_DIR"
cp ./manifest.json "$RELEASE_DIR"

echo
echo "[v] Release $VERSION created at $RELEASE_DIR"
